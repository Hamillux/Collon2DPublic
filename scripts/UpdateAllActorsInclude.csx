using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;

public static bool ContainsActorClassDefinition(string filePath)
{
    string fileContent = System.IO.File.ReadAllText(filePath);
    MatchCollection matches = Regex.Matches(fileContent, @"CLN2D_GEN_DEFINE_ACTOR\s*\(\s*\)");
    return matches.Count > 0;
}

public static void Main(IList<string> args)
{
    Console.WriteLine("args:");
    for (var i = 0; i < args.Count; i++)
    {
        Console.WriteLine($"Args[{i}]: {args[i]}");
    }
    if (args.Count != 2)
    {
        Console.WriteLine("Requied args: [0]<Source directory>, [1]<Actor directory>");
        return;
    }

    var sourceDirectory = new Uri(args[0]);
    var actorDirectory = new Uri(args[1]);
    string allActorsIncludeFileName = "AllActorsInclude_generated.h";
    Console.WriteLine($"Source:'{sourceDirectory}'");
    Console.WriteLine($"Actor:'{actorDirectory}'");

    IEnumerable<string> filesInActorDirectory = System.IO.Directory.EnumerateFiles(actorDirectory.AbsolutePath, "*.h", System.IO.SearchOption.AllDirectories);
    List<string> includePathList = new List<string>();
    for(int i = 0; i < filesInActorDirectory.Count(); i ++)
    {
        string file = filesInActorDirectory.ElementAt(i);
        bool containsDefinition = ContainsActorClassDefinition(file);
        string msg = containsDefinition ? "Contains" : "NOT contains";
        Console.WriteLine($"[{i}]{Path.GetFileName(file).PadRight(30)} -> {msg}");
        if(containsDefinition)
        {
            includePathList.Add(sourceDirectory.MakeRelativeUri(new Uri(file)).ToString());
        }
        
    }

    Console.WriteLine("Include List:");
    foreach (string file in includePathList)
    {
        Console.WriteLine(file);
    }

    var includeFilePath = new Uri(actorDirectory, allActorsIncludeFileName);
    Console.WriteLine($"includeFilePath: '{includeFilePath.AbsolutePath}'");
    FileStream fstream = new FileStream(includeFilePath.AbsolutePath, FileMode.Create);
    StreamWriter writer = new StreamWriter(fstream);
    writer.WriteLine("#pragma once");
    writer.WriteLine("// Generated by script 'UpdateAllActorsInclude.csx'");
    foreach(string includePath in includePathList)
    {
        writer.WriteLine($"#include \"{includePath}\"");
    }
    writer.Close();
    
}
Console.WriteLine("Version: {0}", Environment.Version.ToString());
Main(Args);